argocd-apps:
  # -- Deploy Argo CD Applications within this helm release
  applications: 
  - name: argocd
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/test-argocd
      helm:
        valueFiles:
        - values/values-override.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
    ignoreDifferences:
    - group: v1
      kind: Secret
      name: argocd-secret
      namespace: argocd
      jsonPointers:
      - /data
  
  - name: argocd-apps
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/test-argocd-apps
      helm:
        valueFiles:
        - values/values-override.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true

  - name: ingress-nginx
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/test-ingress-nginx
      helm:
        valueFiles:
        - values/values-override.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: ingress-nginx
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true


  - name: ruby-app
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/ruby-app
      helm:
        valueFiles:
        - values.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: default
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
  - name: db
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/test-postgres
      helm:
        valueFiles:
        - values/values-override.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: default
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
  - name: tekton
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    project: default
    source:
      repoURL: https://github.com/giddy87/container-excercises
      targetRevision: main
      path: k8s/tekton
    destination:
      server: https://kubernetes.default.svc
      namespace: tekton-pipelines
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
#  - name: tekton-pipelines
#    namespace: argocd
#    additionalLabels: {}
#    additionalAnnotations: {}
#    project: default
#    source:
#      repoURL: https://github.com/giddy87/container-excercises
#      targetRevision: main
#      path: k8s/tekton-pipelines
#    destination:
#      server: https://kubernetes.default.svc
#      namespace: tekton-runs
#    syncPolicy:
#      automated:
#        prune: true
#        selfHeal: true
#      syncOptions:
#      - CreateNamespace=true

  
  
  projects:
  - name: testapps
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    finalizers:
    - resources-finalizer.argocd.argoproj.io
    description: test apps project
    sourceRepos:
    - '*'
    destinations:
    - namespace: 'test-apps'
      server: https://kubernetes.default.svc
    clusterResourceWhitelist: []
    clusterResourceBlacklist: []
    namespaceResourceBlacklist:
    - group: ''
      kind: ResourceQuota
    - group: ''
      kind: LimitRange
    - group: ''
      kind: NetworkPolicy
    namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
    sourceNamespaces:
    - argo

